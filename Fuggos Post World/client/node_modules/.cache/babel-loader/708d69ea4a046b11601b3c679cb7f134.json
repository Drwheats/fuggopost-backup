{"ast":null,"code":"var _jsxFileName = \"/Users/saraabdul/WebstormProjects/fuggopost/Fuggos Post World/client/src/PostPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport EnemyPost from \"./EnemyPost\";\nimport { ImArrowLeft } from \"react-icons/im\";\nimport { render } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostPage() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState({\n    postName: \"\",\n    postTopic: \"\",\n    postBody: \"\",\n    postNumber: 0,\n    postVisibility: true,\n    postReplies: [],\n    numberInlineReplies: [],\n    timePosted: \"\"\n  });\n  // const [inlineReplies, setInlineReplies] = useState();\n  const [clientReplyBody, setClientReplyBody] = useState(\"no text\");\n  const [clientReplyName, setClientReplyName] = useState(\"anonymous\");\n  let pageLoc = window.location.pathname.split('/')[2];\n  let json_body = JSON.stringify({\n    pageLoc\n  });\n  function wait(ms) {\n    let start = new Date().getTime();\n    let end = start;\n    while (end < start + ms) {\n      end = new Date().getTime();\n    }\n  }\n  const scoreJSON = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: json_body\n  };\n  // ALl things REPLIES go here:\n  const changeInputNameValue = event => {\n    setClientReplyName(event.target.value);\n  };\n  const changeInputPostBody = event => {\n    setClientReplyBody(event.target.value);\n  };\n  function submitReply() {\n    if (clientReplyName === \"\") {\n      setClientReplyName(\"anonymous\");\n    }\n    let json_body = JSON.stringify({\n      pageLoc: pageLoc,\n      replyName: clientReplyName,\n      replyBody: clientReplyBody\n    });\n    const scoreJSON = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: json_body\n    };\n    fetch(\"http://localhost:3001/submitReply\", scoreJSON).then(response => response.json());\n    setIsLoading(true);\n    wait(2000);\n    setIsLoading(true);\n  }\n\n  // Fetching the data JSON variable from the server.\n  useEffect(() => {\n    if (isLoading) {\n      fetch(\"http://localhost:3001/pageInfo\", scoreJSON).then(response => response.json()).then(result => {\n        setData(result);\n        setIsLoading(false);\n      });\n    }\n    mapReplies();\n  });\n  window.onload = mapReplies();\n  window.onload = insertInlineReplies();\n  window.onload = insertTopReplies();\n  function mapReplies() {\n    data.numberInlineReplies = [];\n    data.postReplies.map(s => {\n      let holder = [];\n      let str = \"\";\n      s.nestedReplies = [];\n      let len = s.replyBody.length;\n      // this finds all the replies inside of data.postReplies[i].replyBody\n      for (let i = 0; i < len; i++) {\n        str = \"\";\n        if (s.replyBody[i] === '@') {\n          // if (s.replyBody[i]) {\n          for (let j = i + 1; j < len; j++) {\n            if (/^\\d/.test(s.replyBody[j])) {\n              str += s.replyBody[j];\n              continue;\n            } else {\n              if (str === \"\") {\n                break;\n              }\n            }\n            if (str !== \"\") {\n              holder.push(str);\n              str = \"\";\n              break;\n            }\n          }\n        }\n        if (str !== \"\") {\n          str = Number(str);\n          holder.push(str);\n        }\n      }\n      for (let i = 0; i < holder.length; i++) {\n        if (Number(holder[i]) === Number(data.postNumber)) {\n          // console.log(s.postNumber)\n          data.numberInlineReplies.push(s.postNumber);\n        }\n      }\n      for (let i = 0; i < data.postReplies.length; i++) {\n        if (data.postReplies[i].nestedReplies) for (let j = 0; j < holder.length; j++) {\n          if (Number(holder[j]) === Number(data.postReplies[i].postNumber) && !data.postReplies[i].nestedReplies.includes(s.postNumber)) {\n            data.postReplies[i].nestedReplies.push(s.postNumber);\n          }\n        }\n      }\n      return 0;\n    });\n  }\n  function insertInlineReplies() {\n    for (let k = 0; k < data.postReplies.length; k++) {\n      let greenStr = \"\";\n      let greenText = document.createElement('p');\n      let createdElement = document.createElement('span');\n      let holderElement = document.createElement('pre');\n      let whiteText = document.createElement('pre');\n      let links = document.createElement('a');\n      let enemyPostBody = data.postReplies[k].replyBody + \" \\n\";\n      let postStr = \"\";\n      for (let i = 0; i < enemyPostBody.length; i++) {\n        let greenText = document.createElement('p');\n        if (enemyPostBody[i] === '>') {\n          let greenStr = \"\";\n          for (let j = i; j < enemyPostBody.length; j++) {\n            if (enemyPostBody[j] !== '\\n') {\n              console.log(enemyPostBody.length);\n              greenStr += enemyPostBody[j];\n              console.log(greenStr);\n            } else {\n              console.log(greenStr + \" logged!\");\n              greenText.setAttribute(\"className\", \"greenText\");\n              greenText.className = \"greenText\";\n              greenText.textValue = greenStr;\n              greenText.innerHTML = greenStr;\n              whiteText.insertAdjacentElement(\"beforeend\", greenText);\n              greenStr = \"\";\n              greenText = document.createElement('p');\n              i = j;\n              break;\n            }\n          }\n        }\n        if (enemyPostBody[i] === '@') {\n          postStr += enemyPostBody[i];\n          for (let j = i + 1; j < enemyPostBody.length; j++) {\n            if (/^\\d/.test(enemyPostBody[j])) {\n              postStr += enemyPostBody[j];\n            } else if (postStr === '@') {\n              break;\n            } else {\n              let postLink = document.createElement('a');\n              postLink.className = \"inlineReply\";\n              postLink.textValue = postStr;\n              postLink.content = postStr;\n              postLink.id = \"inlineReply\" + data.postReplies[k].postNumber;\n              postLink.innerHTML = postStr;\n              postLink.setAttribute('href', '#reply' + postStr.slice(1));\n              try {\n                postLink.setAttribute('textfloat', document.getElementById(\"reply\" + postStr.slice(1)).innerText);\n              } catch (e) {}\n              whiteText.append(postLink);\n              postStr = \"\";\n              postLink = \"\";\n              i = j - 1;\n              break;\n            }\n          }\n        } else {\n          whiteText.append(enemyPostBody[i]);\n        }\n      }\n      greenText.append(greenStr);\n      whiteText.append(greenText);\n      try {\n        document.getElementById(\"enemyPostText\" + data.postReplies[k].postNumber).innerHTML = '';\n        createdElement.append(whiteText);\n        createdElement.append(links);\n        document.getElementById(\"enemyPostText\" + data.postReplies[k].postNumber).append(createdElement);\n      } catch (e) {}\n    }\n  }\n  function insertTopReplies() {\n    let classes = document.getElementsByClassName(\"inlineReply2\");\n    // console.log(\"starting : \")\n    for (let i = 0; i < classes.length; i++) {\n      // console.log(classes[i])\n      // console.log(data.postReplies)\n      classes[i].setAttribute(\"textfloat\", document.getElementById(\"reply\" + classes[i].innerText.slice(2)).innerText);\n    }\n    classes = document.getElementsByClassName(\"inlineReply3\");\n    for (let i = classes.length; i > 0; i--) {\n      // console.log(classes[i])\n      try {\n        classes[i].setAttribute(\"textfloat\", document.getElementById(\"reply\" + classes[i].innerText.slice(2)).innerText);\n      } catch (e) {}\n    }\n  }\n  insertInlineReplies();\n  function formatDate() {\n    let timePosted = Date(data.timePosted);\n    timePosted = timePosted.split(' ').slice(0, 5).join(' ');\n    return timePosted;\n  }\n  formatDate();\n  function LoadAfter5Seconds() {\n    setIsLoading(true);\n  }\n  // LoadAfter5Seconds();\n\n  // React.useEffect() {\n  //     mapReplies();\n  //     insertInlineReplies();\n  //     insertTopReplies();\n  // }\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: LoadAfter5Seconds,\n      className: \"replyLoader\",\n      children: \"Load Replies!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"originalPoster\",\n      id: \"reply\" + data.postNumber,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"inlineReply\",\n        children: [data.numberInlineReplies.map(r => {\n          let lol = \"hey\";\n          try {\n            lol = document.getElementById(\"reply\" + r).innerText;\n          } catch (e) {}\n          ;\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"inlineReply3\",\n            href: \"/post/\" + data.postNumber + \"#reply\" + r,\n            textfloat: lol,\n            children: [\">>\", r, \"  \"]\n          }, r, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 24\n          }, this);\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"postTopic\",\n        children: data.postTopic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"originalPosterHeader\",\n        id: \"originalPosterHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"OriginalPosterNumber\",\n          children: [\"#\", data.postNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"originalPosterName\",\n          children: data.postName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 141\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"timeStampOP\",\n          children: formatDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"postText\",\n        children: data.postBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"enemyPosters\",\n      children: data.postReplies.map(s => {\n        return /*#__PURE__*/_jsxDEV(EnemyPost, {\n          enemyPostName: s.replyName,\n          enemyPostBody: s.replyBody,\n          enemyPostNumber: s.postNumber,\n          motherPost: data.postNumber,\n          nestedReplies: s.nestedReplies,\n          timePosted: s.postTime\n        }, s.postNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submissionFormReply\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submissionForm2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeInputNameValue,\n          type: \"text\",\n          className: \"nameTextSubmit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: changeInputPostBody,\n          className: \"mainTextSubmit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitReply,\n          children: \"REPLY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footerPostPage\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/b\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(ImArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 56\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 42\n      }, this), \"    \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 9\n  }, this);\n}\n_s(PostPage, \"d9EpuIuo5zBtuX6s4XXZ2nOVfLQ=\");\n_c = PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useEffect","useState","EnemyPost","ImArrowLeft","render","PostPage","isLoading","setIsLoading","data","setData","postName","postTopic","postBody","postNumber","postVisibility","postReplies","numberInlineReplies","timePosted","clientReplyBody","setClientReplyBody","clientReplyName","setClientReplyName","pageLoc","window","location","pathname","split","json_body","JSON","stringify","wait","ms","start","Date","getTime","end","scoreJSON","method","headers","body","changeInputNameValue","event","target","value","changeInputPostBody","submitReply","replyName","replyBody","fetch","then","response","json","result","mapReplies","onload","insertInlineReplies","insertTopReplies","map","s","holder","str","nestedReplies","len","length","i","j","test","push","Number","includes","k","greenStr","greenText","document","createElement","createdElement","holderElement","whiteText","links","enemyPostBody","postStr","console","log","setAttribute","className","textValue","innerHTML","insertAdjacentElement","postLink","content","id","slice","getElementById","innerText","e","append","classes","getElementsByClassName","formatDate","join","LoadAfter5Seconds","r","lol","postTime"],"sources":["/Users/saraabdul/WebstormProjects/fuggopost/Fuggos Post World/client/src/PostPage.js"],"sourcesContent":["import {useEffect} from \"react\";\nimport {useState} from \"react\";\nimport EnemyPost from \"./EnemyPost\";\nimport {ImArrowLeft} from \"react-icons/im\"\nimport {render} from \"@testing-library/react\";\n\nexport default function PostPage() {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [data, setData] = useState({postName: \"\", postTopic: \"\", postBody: \"\", postNumber: 0, postVisibility: true, postReplies: [], numberInlineReplies: [], timePosted: \"\"});\n    // const [inlineReplies, setInlineReplies] = useState();\n    const [clientReplyBody, setClientReplyBody] = useState(\"no text\");\n    const [clientReplyName, setClientReplyName] = useState(\"anonymous\");\n    let pageLoc = window.location.pathname.split('/')[2];\n    let json_body = JSON.stringify({ pageLoc })\n\n    function wait(ms){\n        let start = new Date().getTime();\n        let end = start;\n        while(end < start + ms) {\n            end = new Date().getTime();\n        }\n    }\n    const scoreJSON = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: json_body\n    }\n    // ALl things REPLIES go here:\n    const changeInputNameValue = (event) => {\n        setClientReplyName(event.target.value);\n    }\n    const changeInputPostBody = (event) => {\n        setClientReplyBody(event.target.value);\n    }\n    function submitReply() {\n        if (clientReplyName === \"\") {\n            setClientReplyName(\"anonymous\");\n        }\n        let json_body = JSON.stringify(\n            {pageLoc: pageLoc, replyName: clientReplyName, replyBody: clientReplyBody})\n        const scoreJSON = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: json_body\n        }\n        fetch(\"http://localhost:3001/submitReply\", scoreJSON)\n            .then(response => response.json());\n\n        setIsLoading(true);\n\n        wait(2000);\n\n        setIsLoading(true);\n    }\n\n    // Fetching the data JSON variable from the server.\n    useEffect(() => {\n        if (isLoading) {\n            fetch(\"http://localhost:3001/pageInfo\", scoreJSON)\n                .then(response => response.json())\n                .then((\n                    result) => {\n                    setData(result);\n                    setIsLoading(false);\n\n                })\n        }\n        mapReplies();\n        }\n    )\n    window.onload = mapReplies();\n    window.onload = insertInlineReplies();\n    window.onload =     insertTopReplies();\n\n    function mapReplies() {\n        data.numberInlineReplies = []\n\n        data.postReplies.map(s=> {\n            let holder = [];\n            let str = \"\";\n            s.nestedReplies = []\n            let len = s.replyBody.length\n            // this finds all the replies inside of data.postReplies[i].replyBody\n            for (let i = 0; i < len; i++) {\n                str = \"\";\n                if (s.replyBody[i] === '@') {\n                // if (s.replyBody[i]) {\n                    for (let j= i +1; j < len; j++) {\n                        if (/^\\d/.test(s.replyBody[j])) {\n                            str += s.replyBody[j];\n                            continue;}\n                        else\n                        {if (str === \"\") {\n                            break;\n                        }}\n\n                        if (str !== \"\") {\n                            holder.push(str);\n                            str = \"\";\n                            break;\n                           }\n\n                    }\n                } if (str !== \"\")\n                {   str = Number(str)\n                    holder.push(str)}\n            }\n                for (let i = 0; i < holder.length; i++) {\n                    if (Number(holder[i]) === Number(data.postNumber)){\n                        // console.log(s.postNumber)\n                        data.numberInlineReplies.push(s.postNumber)\n                    }\n\n                }\n\n            for (let i =0; i < data.postReplies.length; i++){\n                if (data.postReplies[i].nestedReplies)\n                for (let j=0; j<holder.length; j++) {\n                    if (Number(holder[j]) === Number(data.postReplies[i].postNumber) && !data.postReplies[i].nestedReplies.includes(s.postNumber)) {\n                        data.postReplies[i].nestedReplies.push(s.postNumber)\n                    }\n\n                }\n            }\n            return 0;\n        }\n        )\n    }\n\n    function insertInlineReplies(){\n        for (let k =0; k< data.postReplies.length; k++){\n            let greenStr = \"\"\n            let greenText = document.createElement('p');\n\n            let createdElement = document.createElement('span');\n            let holderElement = document.createElement('pre');\n            let whiteText = document.createElement('pre');\n            let links = document.createElement('a');\n            let enemyPostBody = data.postReplies[k].replyBody + \" \\n\";\n            let postStr = \"\";\n            for (let i = 0; i < enemyPostBody.length; i++) {\n                let greenText = document.createElement('p')\n\n                if (enemyPostBody[i] === '>') {\n                    let greenStr = \"\";\n                    for (let j=i; j < enemyPostBody.length; j++) {\n                        if (enemyPostBody[j] !== '\\n'){\n                            console.log(enemyPostBody.length)\n                            greenStr += enemyPostBody[j];\n                            console.log(greenStr)\n                        }\n\n                        else {\n                            console.log(greenStr + \" logged!\")\n                            greenText.setAttribute(\"className\", \"greenText\");\n                            greenText.className = \"greenText\";\n                            greenText.textValue = greenStr;\n                            greenText.innerHTML = greenStr;\n                            whiteText.insertAdjacentElement(\"beforeend\", greenText);\n                            greenStr = \"\"\n                            greenText = document.createElement('p');\n                            i = j;\n                            break;\n                        }\n\n\n\n                    }\n\n                }\n\n                if (enemyPostBody[i] === '@') {\n                    postStr += enemyPostBody[i];\n                    for (let j=i+1; j < enemyPostBody.length; j++) {\n                        if (/^\\d/.test(enemyPostBody[j])) {\n                            postStr += enemyPostBody[j];\n                        }\n                        else if (postStr === '@'){\n                            break;\n                        }\n                        else {\n                            let postLink = document.createElement('a')\n                            postLink.className = \"inlineReply\";\n                            postLink.textValue = postStr;\n                            postLink.content = postStr;\n\n                            postLink.id = \"inlineReply\"+data.postReplies[k].postNumber;\n\n                            postLink.innerHTML = postStr;\n                            postLink.setAttribute('href', '#reply'+postStr.slice(1));\n                            try{\n                                postLink.setAttribute('textfloat', document.getElementById(\"reply\"+postStr.slice(1)).innerText);\n                            }\n                            catch (e){}\n                            whiteText.append(postLink)\n                            postStr = \"\";\n                            postLink = \"\"\n                            i = j -1;\n                            break;\n                        }\n\n                    }\n                }\n\n                else {whiteText.append(enemyPostBody[i])}\n\n            }\n            greenText.append(greenStr)\n            whiteText.append(greenText)\n            try {\n                document.getElementById(\"enemyPostText\"+data.postReplies[k].postNumber).innerHTML = '';\n                createdElement.append(whiteText)\n                createdElement.append(links)\n                document.getElementById(\"enemyPostText\"+data.postReplies[k].postNumber).append(createdElement)\n            }\n\n            catch (e){}\n        }\n    }\n    function insertTopReplies(){\n        let classes = document.getElementsByClassName(\"inlineReply2\");\n        // console.log(\"starting : \")\n        for (let i=0; i<classes.length; i++){\n            // console.log(classes[i])\n            // console.log(data.postReplies)\n            classes[i].setAttribute(\"textfloat\", document.getElementById(\"reply\"+classes[i].innerText.slice(2)).innerText)\n        }\n        classes = document.getElementsByClassName(\"inlineReply3\");\n        for (let i=classes.length; i>0; i--){\n            // console.log(classes[i])\n            try {\n                classes[i].setAttribute(\"textfloat\", document.getElementById(\"reply\"+classes[i].innerText.slice(2)).innerText)\n            }\n            catch (e) {\n\n            }\n        }\n\n\n    }\n    insertInlineReplies();\n\n    function formatDate() {\n        let timePosted = Date(data.timePosted);\n        timePosted = timePosted.split(' ').slice(0, 5).join(' ');\n        return timePosted;\n    }\n    formatDate();\n\n    function LoadAfter5Seconds() {\n        setIsLoading(true);\n    }\n    // LoadAfter5Seconds();\n\n    // React.useEffect() {\n    //     mapReplies();\n    //     insertInlineReplies();\n    //     insertTopReplies();\n    // }\n    useEffect(() => {\n        \n    })\n    return (\n\n        <div className=\"postPage\" >\n            <button onClick={LoadAfter5Seconds} className=\"replyLoader\">Load Replies!</button>\n            <div className=\"originalPoster\" id={\"reply\"+data.postNumber}><ul className=\"inlineReply\">{data.numberInlineReplies.map((r) => {\n                let lol = \"hey\"\n                try{lol = document.getElementById(\"reply\"+r).innerText}\n                catch (e){};\n                return <a className=\"inlineReply3\" href={\"/post/\" + data.postNumber + \"#reply\"+r} textfloat={lol} key={r}>>>{r}  </a>\n            })} </ul>\n                <h2 className=\"postTopic\">{data.postTopic}</h2>\n                <div className=\"originalPosterHeader\" id=\"originalPosterHeader\"><h3 className=\"OriginalPosterNumber\">#{data.postNumber}</h3><h3 className=\"originalPosterName\">{data.postName}</h3>\n                    <h3 className=\"timeStampOP\">{formatDate()}</h3>\n                </div>\n            <p className=\"postText\">{data.postBody}</p>\n            </div>\n        <div className=\"enemyPosters\">\n            {data.postReplies.map(s => {\n                    return <EnemyPost key={s.postNumber} enemyPostName={s.replyName} enemyPostBody={s.replyBody} enemyPostNumber={s.postNumber} motherPost={data.postNumber} nestedReplies={s.nestedReplies} timePosted={s.postTime}/>\n                })}\n        </div>\n            <div className=\"submissionFormReply\">\n\n            <div className=\"submissionForm2\">\n                <label>Name</label><input onChange={changeInputNameValue} type=\"text\" className=\"nameTextSubmit\"/>\n\n                <br/>\n                <textarea onChange={changeInputPostBody} className=\"mainTextSubmit\"/>\n                <br/>\n                <button onClick={submitReply}>REPLY</button>\n            </div>\n            </div>\n        <div className=\"footerPostPage\"> <a href=\"/b\"> <ImArrowLeft /> </a>    </div>\n        </div> )}"],"mappings":"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"},"metadata":{},"sourceType":"module"}