{"ast":null,"code":"var _jsxFileName = \"/Users/saraabdul/WebstormProjects/fuggopost/Fuggos Post World/client/src/PostPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport EnemyPost from \"./EnemyPost\";\nimport { $ } from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostPage() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState({\n    postName: \"\",\n    postTopic: \"\",\n    postBody: \"\",\n    postNumber: 0,\n    postVisibility: true,\n    postReplies: [],\n    numberInlineReplies: [],\n    timePosted: \"\"\n  });\n  // const [inlineReplies, setInlineReplies] = useState();\n  const [clientReplyBody, setClientReplyBody] = useState(\"no text\");\n  const [clientReplyName, setClientReplyName] = useState(\"anonymous\");\n  let pageLoc = window.location.pathname.split('/')[2];\n  let json_body = JSON.stringify({\n    pageLoc\n  });\n  const scoreJSON = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: json_body\n  };\n\n  // ALl things REPLIES go here:\n  const changeInputNameValue = event => {\n    setClientReplyName(event.target.value);\n  };\n  const changeInputPostBody = event => {\n    setClientReplyBody(event.target.value);\n  };\n  function submitReply() {\n    if (clientReplyName === \"\") {\n      setClientReplyName(\"anonymous\");\n    }\n    let json_body = JSON.stringify({\n      pageLoc: pageLoc,\n      replyName: clientReplyName,\n      replyBody: clientReplyBody\n    });\n    const scoreJSON = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: json_body\n    };\n    fetch(\"http://localhost:3001/submitReply\", scoreJSON).then(response => response.json());\n    setIsLoading(true);\n  }\n\n  // Fetching the data JSON variable from the server.\n  useEffect(() => {\n    if (isLoading) {\n      fetch(\"http://localhost:3001/pageInfo\", scoreJSON).then(response => response.json()).then(result => {\n        setData(result);\n        setIsLoading(false);\n      });\n    }\n    mapReplies();\n  });\n  window.onload = mapReplies();\n  function mapReplies() {\n    data.numberInlineReplies = [];\n    data.postReplies.map(s => {\n      let holder = [];\n      let str = \"\";\n      s.nestedReplies = [];\n      let len = s.replyBody.length;\n      // this finds all the replies inside of data.postReplies[i].replyBody\n      for (let i = 0; i < len; i++) {\n        str = \"\";\n        if (s.replyBody[i] === '@') {\n          // if (s.replyBody[i]) {\n          for (let j = i + 1; j < len; j++) {\n            if (/^\\d/.test(s.replyBody[j])) {\n              str += s.replyBody[j];\n              continue;\n            } else {\n              if (str === \"\") {\n                break;\n              }\n            }\n            if (str !== \"\") {\n              holder.push(str);\n              str = \"\";\n              break;\n            }\n          }\n        }\n        if (str !== \"\") {\n          str = Number(str);\n          holder.push(str);\n        }\n      }\n      for (let i = 0; i < holder.length; i++) {\n        if (Number(holder[i]) === Number(data.postNumber)) {\n          // console.log(s.postNumber)\n          data.numberInlineReplies.push(s.postNumber);\n        }\n      }\n      for (let i = 0; i < data.postReplies.length; i++) {\n        if (data.postReplies[i].nestedReplies) for (let j = 0; j < holder.length; j++) {\n          if (Number(holder[j]) === Number(data.postReplies[i].postNumber) && !data.postReplies[i].nestedReplies.includes(s.postNumber)) {\n            data.postReplies[i].nestedReplies.push(s.postNumber);\n          }\n        }\n      }\n      return 0;\n    });\n  }\n  function insertInlineReplies() {\n    let green = false;\n    for (let k = 0; k < data.postReplies.length; k++) {\n      let createdElement = document.createElement('span');\n      let whiteText = document.createElement('pre');\n      let links = document.createElement('a');\n      let enemyPostBody = data.postReplies[k].replyBody + \" \";\n      for (let i = 0; i < enemyPostBody.length; i++) {\n        let postStr = \"\";\n        let greenStr = \"\";\n        if (enemyPostBody[i] === '>') {\n          postStr += enemyPostBody[i];\n          for (let j = i + 1; j < enemyPostBody.length; j++) {\n            if (/^\\n/.test(enemyPostBody[j])) {\n              postStr += enemyPostBody[j];\n            } else if (postStr === '\\n') {\n              break;\n            } else {\n              // console.log(\"we are about to append \" + postStr)\n              let greenText = document.createElement('p');\n              greenText.setAttribute(\"className\", \"greenText\");\n              greenText.className = \"greenText\";\n              greenText.textValue = greenStr;\n              greenText.innerHTML = greenStr;\n              whiteText.append(greenText);\n              i = j - 1;\n              break;\n            }\n          }\n        }\n        if (enemyPostBody[i] === '@') {\n          postStr += enemyPostBody[i];\n          for (let j = i + 1; j < enemyPostBody.length; j++) {\n            if (/^\\d/.test(enemyPostBody[j])) {\n              postStr += enemyPostBody[j];\n            } else if (postStr === '@') {\n              break;\n            } else {\n              // console.log(\"we are about to append \" + postStr)\n              let postLink = document.createElement('a');\n              postLink.className = \"inlineReply\";\n              postLink.textValue = postStr;\n              postLink.content = postStr;\n              postLink.id = \"inlineReply\" + data.postReplies[k].postNumber;\n              postLink.innerHTML = postStr;\n              postLink.setAttribute('href', '#reply' + postStr.slice(1));\n              try {\n                postLink.setAttribute('textfloat', document.getElementById(\"reply\" + postStr.slice(1)).innerText);\n              } catch (e) {}\n              whiteText.append(postLink);\n              i = j - 1;\n              break;\n            }\n          }\n        } else {\n          whiteText.append(enemyPostBody[i]);\n        }\n      }\n      try {\n        document.getElementById(\"enemyPostText\" + data.postReplies[k].postNumber).innerHTML = '';\n\n        // let temp = whiteText.innerHTML;\n        // if (temp.includes(\"http://\")){\n        //     let indexOfURL = temp.indexOf(\"http://\")\n        //     console.log(indexOfURL)\n        //     let grabbedURL = temp.substring(indexOfURL, temp.indexOf(''))\n        //     console.log(\"Our Post is : \" + temp)\n        //     console.log(\"We grabbed : \" + grabbedURL)\n        //\n        //\n        //\n        // }\n        // function urlify(text) {\n        //     const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n        //     return text.split(urlRegex)\n        //         .map(part => {\n        //             if(part.match(urlRegex)) {\n        //                 return <a href={part}>{part}</a>;\n        //             }\n        //             return part;\n        //         });}\n        let temp = whiteText.innerHTML;\n        whiteText.innerHTML = `<p className=\"greenText\">${whiteText.innerHTML.replaceAll('>', \">\")}</p>`;\n        // if (whiteText.innerHTML.includes(\">\"))\n        // for (let i=0; i<whiteText.innerHTML.length; i++){\n        //     let letter = temp[i];\n        //     if (letter === '>'){\n        //         console.log(whiteText.innerHTML[i])\n        //\n        //         whiteText.innerHTML[i].replaceAll(\">\", \"!\")\n        //         for (let j = 0; j < whiteText.innerHTML.length; j++) {\n        //         }\n        //     }\n        // }\n\n        createdElement.append(whiteText);\n        createdElement.append(links);\n        // console.log(createdElement.innerHTML);\n        document.getElementById(\"enemyPostText\" + data.postReplies[k].postNumber).append(createdElement);\n        // return createdElement;\n      } catch (e) {}\n    }\n  }\n  function insertTopReplies() {\n    let classes = document.getElementsByClassName(\"inlineReply2\");\n    // console.log(\"starting : \")\n    for (let i = 0; i < classes.length; i++) {\n      // console.log(classes[i])\n      // console.log(data.postReplies)\n      classes[i].setAttribute(\"textfloat\", document.getElementById(\"reply\" + classes[i].innerText.slice(2)).innerText);\n    }\n    classes = document.getElementsByClassName(\"inlineReply3\");\n    for (let i = classes.length; i > 0; i--) {\n      // console.log(classes[i])\n      try {\n        classes[i].setAttribute(\"textfloat\", document.getElementById(\"reply\" + classes[i].innerText.slice(2)).innerText);\n      } catch (e) {}\n    }\n  }\n  insertInlineReplies();\n  insertTopReplies();\n  function formatDate() {\n    let timePosted = Date(data.timePosted);\n    timePosted = timePosted.split(' ').slice(0, 5).join(' ');\n    return timePosted;\n  }\n  formatDate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"originalPoster\",\n      id: \"reply\" + data.postNumber,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"inlineReply\",\n        children: [data.numberInlineReplies.map(r => {\n          let lol = \"hey\";\n          try {\n            lol = document.getElementById(\"reply\" + r).innerText;\n          } catch (e) {}\n          ;\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"inlineReply3\",\n            href: \"/post/\" + data.postNumber + \"#reply\" + r,\n            textfloat: lol,\n            children: [\">>\", r, \"  \"]\n          }, r, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 24\n          }, this);\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"postTopic\",\n        children: data.postTopic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"originalPosterHeader\",\n        id: \"originalPosterHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"OriginalPosterNumber\",\n          children: [\"#\", data.postNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"originalPosterName\",\n          children: data.postName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 141\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"timeStampOP\",\n          children: formatDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"postText\",\n        children: data.postBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"enemyPosters\",\n      children: data.postReplies.map(s => {\n        return /*#__PURE__*/_jsxDEV(EnemyPost, {\n          enemyPostName: s.replyName,\n          enemyPostBody: s.replyBody,\n          enemyPostNumber: s.postNumber,\n          motherPost: data.postNumber,\n          nestedReplies: s.nestedReplies,\n          timePosted: s.postTime\n        }, s.postNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submissionFormReply\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submissionForm2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeInputNameValue,\n          type: \"text\",\n          className: \"nameTextSubmit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: changeInputPostBody,\n          className: \"mainTextSubmit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitReply,\n          children: \"REPLY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 9\n  }, this);\n}\n_s(PostPage, \"TgN/9sVimKSva8KzelauGK/Q6cQ=\");\n_c = PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useEffect","useState","EnemyPost","$","PostPage","isLoading","setIsLoading","data","setData","postName","postTopic","postBody","postNumber","postVisibility","postReplies","numberInlineReplies","timePosted","clientReplyBody","setClientReplyBody","clientReplyName","setClientReplyName","pageLoc","window","location","pathname","split","json_body","JSON","stringify","scoreJSON","method","headers","body","changeInputNameValue","event","target","value","changeInputPostBody","submitReply","replyName","replyBody","fetch","then","response","json","result","mapReplies","onload","map","s","holder","str","nestedReplies","len","length","i","j","test","push","Number","includes","insertInlineReplies","green","k","createdElement","document","createElement","whiteText","links","enemyPostBody","postStr","greenStr","greenText","setAttribute","className","textValue","innerHTML","append","postLink","content","id","slice","getElementById","innerText","e","temp","replaceAll","insertTopReplies","classes","getElementsByClassName","formatDate","Date","join","r","lol","postTime"],"sources":["/Users/saraabdul/WebstormProjects/fuggopost/Fuggos Post World/client/src/PostPage.js"],"sourcesContent":["import {useEffect} from \"react\";\nimport {useState} from \"react\";\nimport EnemyPost from \"./EnemyPost\";\nimport {$} from \"jquery\";\n\nexport default function PostPage() {\n    const [isLoading, setIsLoading] = useState(true);\n    const [data, setData] = useState({postName: \"\", postTopic: \"\", postBody: \"\", postNumber: 0, postVisibility: true, postReplies: [], numberInlineReplies: [], timePosted: \"\"});\n    // const [inlineReplies, setInlineReplies] = useState();\n    const [clientReplyBody, setClientReplyBody] = useState(\"no text\");\n    const [clientReplyName, setClientReplyName] = useState(\"anonymous\");\n\n    let pageLoc = window.location.pathname.split('/')[2];\n    let json_body = JSON.stringify({ pageLoc })\n    const scoreJSON = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: json_body\n    }\n\n    // ALl things REPLIES go here:\n    const changeInputNameValue = (event) => {\n        setClientReplyName(event.target.value);\n    }\n    const changeInputPostBody = (event) => {\n        setClientReplyBody(event.target.value);\n    }\n    function submitReply() {\n        if (clientReplyName === \"\") {\n            setClientReplyName(\"anonymous\");\n        }\n        let json_body = JSON.stringify(\n            {pageLoc: pageLoc, replyName: clientReplyName, replyBody: clientReplyBody})\n        const scoreJSON = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: json_body\n        }\n        fetch(\"http://localhost:3001/submitReply\", scoreJSON)\n            .then(response => response.json());\n        setIsLoading(true);\n    }\n\n    // Fetching the data JSON variable from the server.\n    useEffect(() => {\n        if (isLoading) {\n            fetch(\"http://localhost:3001/pageInfo\", scoreJSON)\n                .then(response => response.json())\n                .then((\n                    result) => {\n                    setData(result);\n                    setIsLoading(false);\n\n                })\n        }\n        mapReplies();\n        }\n    )\n    window.onload = mapReplies();\n\n    function mapReplies() {\n        data.numberInlineReplies = []\n\n        data.postReplies.map(s=> {\n            let holder = [];\n            let str = \"\";\n            s.nestedReplies = []\n            let len = s.replyBody.length\n            // this finds all the replies inside of data.postReplies[i].replyBody\n            for (let i = 0; i < len; i++) {\n                str = \"\";\n                if (s.replyBody[i] === '@') {\n                // if (s.replyBody[i]) {\n                    for (let j= i +1; j < len; j++) {\n                        if (/^\\d/.test(s.replyBody[j])) {\n                            str += s.replyBody[j];\n                            continue;}\n                        else\n                        {if (str === \"\") {\n                            break;\n                        }}\n\n                        if (str !== \"\") {\n                            holder.push(str);\n                            str = \"\";\n                            break;\n                           }\n\n                    }\n                } if (str !== \"\")\n                {   str = Number(str)\n                    holder.push(str)}\n            }\n                for (let i = 0; i < holder.length; i++) {\n                    if (Number(holder[i]) === Number(data.postNumber)){\n                        // console.log(s.postNumber)\n                        data.numberInlineReplies.push(s.postNumber)\n                    }\n\n                }\n\n            for (let i =0; i < data.postReplies.length; i++){\n                if (data.postReplies[i].nestedReplies)\n                for (let j=0; j<holder.length; j++) {\n                    if (Number(holder[j]) === Number(data.postReplies[i].postNumber) && !data.postReplies[i].nestedReplies.includes(s.postNumber)) {\n                        data.postReplies[i].nestedReplies.push(s.postNumber)\n                    }\n\n                }\n            }\n            return 0;\n        }\n        )\n    }\n    function insertInlineReplies(){\n        let green = false;\n        for (let k =0; k< data.postReplies.length; k++){\n            let createdElement = document.createElement('span');\n            let whiteText = document.createElement('pre');\n            let links = document.createElement('a');\n            let enemyPostBody = data.postReplies[k].replyBody + \" \";\n            for (let i = 0; i < enemyPostBody.length; i++) {\n                let postStr = \"\"\n                let greenStr =\"\"\n\n                if (enemyPostBody[i] === '>') {\n                    postStr += enemyPostBody[i];\n                    for (let j=i+1; j < enemyPostBody.length; j++) {\n                        if (/^\\n/.test(enemyPostBody[j])) {\n                            postStr += enemyPostBody[j];\n                        }\n                        else if (postStr === '\\n'){\n                            break;\n                        }\n                        else {\n                            // console.log(\"we are about to append \" + postStr)\n                            let greenText = document.createElement('p')\n                            greenText.setAttribute(\"className\", \"greenText\");\n                            greenText.className = \"greenText\";\n                            greenText.textValue = greenStr;\n\n\n                            greenText.innerHTML = greenStr;\n\n                            whiteText.append(greenText)\n                            i = j -1;\n                            break;\n                        }\n\n                    }\n                }\n\n\n                if (enemyPostBody[i] === '@') {\n                    postStr += enemyPostBody[i];\n                    for (let j=i+1; j < enemyPostBody.length; j++) {\n                        if (/^\\d/.test(enemyPostBody[j])) {\n                            postStr += enemyPostBody[j];\n                        }\n                        else if (postStr === '@'){\n                            break;\n                        }\n                        else {\n                            // console.log(\"we are about to append \" + postStr)\n                            let postLink = document.createElement('a')\n                            postLink.className = \"inlineReply\";\n                            postLink.textValue = postStr;\n                            postLink.content = postStr;\n\n                            postLink.id = \"inlineReply\"+data.postReplies[k].postNumber;\n\n                            postLink.innerHTML = postStr;\n                            postLink.setAttribute('href', '#reply'+postStr.slice(1));\n                            try{\n                                postLink.setAttribute('textfloat', document.getElementById(\"reply\"+postStr.slice(1)).innerText);\n                            }\n                            catch (e){}\n                            whiteText.append(postLink)\n                            i = j -1;\n                            break;\n                        }\n\n                    }\n                }\n\n                else {whiteText.append(enemyPostBody[i])}\n\n            }            try {\n                document.getElementById(\"enemyPostText\"+data.postReplies[k].postNumber).innerHTML = '';\n\n\n                // let temp = whiteText.innerHTML;\n                // if (temp.includes(\"http://\")){\n                //     let indexOfURL = temp.indexOf(\"http://\")\n                //     console.log(indexOfURL)\n                //     let grabbedURL = temp.substring(indexOfURL, temp.indexOf(''))\n                //     console.log(\"Our Post is : \" + temp)\n                //     console.log(\"We grabbed : \" + grabbedURL)\n                //\n                //\n                //\n                // }\n                // function urlify(text) {\n                //     const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n                //     return text.split(urlRegex)\n                //         .map(part => {\n                //             if(part.match(urlRegex)) {\n                //                 return <a href={part}>{part}</a>;\n                //             }\n                //             return part;\n                //         });}\n                let temp = whiteText.innerHTML;\n                whiteText.innerHTML = `<p className=\"greenText\">${whiteText.innerHTML.replaceAll('>',\">\")}</p>`;\n                // if (whiteText.innerHTML.includes(\">\"))\n                // for (let i=0; i<whiteText.innerHTML.length; i++){\n                //     let letter = temp[i];\n                //     if (letter === '>'){\n                //         console.log(whiteText.innerHTML[i])\n                //\n                //         whiteText.innerHTML[i].replaceAll(\">\", \"!\")\n                //         for (let j = 0; j < whiteText.innerHTML.length; j++) {\n                //         }\n                //     }\n                // }\n\n                createdElement.append(whiteText)\n                createdElement.append(links)\n                // console.log(createdElement.innerHTML);\n                document.getElementById(\"enemyPostText\"+data.postReplies[k].postNumber).append(createdElement)\n                // return createdElement;\n            }\n\n            catch (e){}\n        }\n    }\n\n    function insertTopReplies(){\n        let classes = document.getElementsByClassName(\"inlineReply2\");\n        // console.log(\"starting : \")\n        for (let i=0; i<classes.length; i++){\n            // console.log(classes[i])\n            // console.log(data.postReplies)\n            classes[i].setAttribute(\"textfloat\", document.getElementById(\"reply\"+classes[i].innerText.slice(2)).innerText)\n        }\n        classes = document.getElementsByClassName(\"inlineReply3\");\n        for (let i=classes.length; i>0; i--){\n            // console.log(classes[i])\n            try {\n                classes[i].setAttribute(\"textfloat\", document.getElementById(\"reply\"+classes[i].innerText.slice(2)).innerText)\n            }\n            catch (e) {\n\n            }\n        }\n\n\n    }\n\n    insertInlineReplies();\n    insertTopReplies();\n\n    function formatDate() {\n        let timePosted = Date(data.timePosted);\n        timePosted = timePosted.split(' ').slice(0, 5).join(' ');\n        return timePosted;\n    }\n    formatDate();\n\n    return (\n\n        <div className=\"postPage\" >\n            <div className=\"originalPoster\" id={\"reply\"+data.postNumber}><ul className=\"inlineReply\">{data.numberInlineReplies.map((r) => {\n                let lol = \"hey\"\n                try{lol = document.getElementById(\"reply\"+r).innerText}\n                catch (e){};\n                return <a className=\"inlineReply3\" href={\"/post/\" + data.postNumber + \"#reply\"+r} textfloat={lol} key={r}>>>{r}  </a>\n            })} </ul>\n                <h2 className=\"postTopic\">{data.postTopic}</h2>\n                <div className=\"originalPosterHeader\" id=\"originalPosterHeader\"><h3 className=\"OriginalPosterNumber\">#{data.postNumber}</h3><h3 className=\"originalPosterName\">{data.postName}</h3>\n                    <h3 className=\"timeStampOP\">{formatDate()}</h3>\n                </div>\n            <p className=\"postText\">{data.postBody}</p>\n            </div>\n        <div className=\"enemyPosters\">\n            {data.postReplies.map(s => {\n                    return <EnemyPost key={s.postNumber} enemyPostName={s.replyName} enemyPostBody={s.replyBody} enemyPostNumber={s.postNumber} motherPost={data.postNumber} nestedReplies={s.nestedReplies} timePosted={s.postTime}/>\n                })}\n        </div>\n            <div className=\"submissionFormReply\">\n\n            <div className=\"submissionForm2\">\n                <label>Name</label><input onChange={changeInputNameValue} type=\"text\" className=\"nameTextSubmit\"/>\n\n                <br/>\n                <textarea onChange={changeInputPostBody} className=\"mainTextSubmit\"/>\n                <br/>\n                <button onClick={submitReply}>REPLY</button>\n            </div>\n            </div>\n\n        </div> )}"],"mappings":"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"},"metadata":{},"sourceType":"module"}